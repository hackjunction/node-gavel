@import '../../../styles/base.scss';

.LongTextInput {
    display: flex;
    flex-direction: column;
    align-items: stretch;

    &_input-wrapper {
        position: relative;
        display: flex;
        flex-direction: row;
    }

    &_input {
        background: transparent;
        border: none;
        color: $snow;
        flex: 1;
        opacity: 0.7;
        border: 1px solid rgba($snow, 0.3);
        padding: 5px 30px 5px 5px;
        min-height: 200px;

        &:focus {
            outline: none;
        }
    }

    &_locked {
        position: absolute;
        top: 0;
        right: 0;
        height: 30px;
        width: 30px;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        
        i {
            color: $snow;
        }
    }

    &_under {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        padding: 5px;
    }

    &_hint {
        flex: 2;
        transition: all 0.2s ease;
        opacity: 0;
    }

    &_character-count {
        flex: 1;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: flex-end;
        align-self: flex-end;
        transition: all 0.2s ease;
        opacity: 0;
    }

    &_character-count-value {
        color: $snow;
    }

    &:focus-within {
        .LongTextInput_input {
            opacity: 1;
        }

        .LongTextInput_hint {
            opacity: 1;
        }

        .LongTextInput_character-count {
            opacity: 1;
        }
    }

    &.has-error {
        .LongTextInput_character-count {
            opacity: 1;

            .LongTextInput_character-count-value {
                color: $error-red;
            }
        }

        .LongTextInput_error {
            opacity: 1;
        }

        .LongTextInput_input {
            border-color: $error-red;
        }
    }
}
